"""
========
Tetrodes
========
Generation of tetrode channelmap
"""

__all__ = ["tetrode"]

import numpy as np
from py_channelmap.template_probes import template_probe


class tetrode(template_probe):
    """ Tetrode hardware definition - called from the probe class when giving the "tetrode" keyword in input

    Parameters
    ----------
    n_electrodes : int
            number of electrodes
    filename : str
            where to save the different files generated by creating the channelmap
    spacing : int , opt
            space between rows

    """

    def __init__(self, n_tetrodes, spacing=200):

        super().__init__()
        self.n_tetrodes = n_tetrodes
        self.spacing = spacing

    def create_channel_map(self):

        """ generate channelmap files for Kilosort
            for tetrodes recordings,
            each tetrode channels is positionned on a single row

        """

        self._chanMap = np.arange(self.n_tetrodes * 4) + 1
        self._chanMap0ind = np.arange(self.n_tetrodes * 4)
        self._connected = np.zeros(len(self._chanMap))
        self._xCoord = np.array([0, 5, 10, 15] * self.n_tetrodes)
        self._yCoord = np.repeat(np.arange(self.n_tetrodes) * self.spacing, 4)
        self._kCoord = np.zeros(len(self._chanMap))
        self._elecInd = np.arange(0, len(self._chanMap))
